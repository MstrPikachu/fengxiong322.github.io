What is Object Oriented Programming - or OOP?

In Java programming, an object is created from a (constructor method)

In Java programming, an attribute is called a (variable).

In Java programming, a behaviour is called a (method)

(or (function) or (procedure)).

A class must have at least one (constructor) to create an object in RAM.

A (superclass) sets up the generic attributes and behaviours of every subclass.

A subclass (inherits) all of the attributes and behaviours of its superclass.

A subclass can (override) a method of the superclass.

A subclass is defined as having a(n) ("is a") relation with its superclass.

Your class is defined as having a ("has a") relationship with a String class.

All classes automatically extend the (java.lang.Object class).

Every class name starts with a (capital letter).

To ues a class a(n) (instance variable) must be associated with it.

A class can only extend (one) superclass.

A class can implement (multiple/Listener) interfaces.

The keyword (new) actually creates the object in RAM.

Methods that have the same name but different parameters are said to be (overloaded).

In java, the source code is stored in the (.java) file.

The bytecode or compiled code is stored in the (.class) file.

These symbols begin and end code blocks in java ({}).

Library files only load (once) in a Java program.

The keyword (public) allows other classes to access methods.

The keyword (private) doesn't allow access to methods from outside the class.

Instance variables are always (private) so that can only be assigned and/or modified
through the class (constructor) or (method) parameter list.

Hiding instance variables is called (encapsulation).

(Get methods) allow another class to view the data stored in an instance variable.

(Set methods) allow another class to change the data stored in an instance variable.

A visual representation of class relationships can be seen by drawing a (UML class diagram).

Final variables are always declared using (capital letters)

User input in a window or textfield is handled implementing a (Panel/JPanel)

Each constructor mus have a unique (parameter list).

A Java application can only have one (main method/driver class).

Each class in a Java application controls only (one) aspect of the application.

The (main method) brings everything together in a Java application. 